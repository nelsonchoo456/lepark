// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StaffRoleEnum {
  MANAGER
  BOTANIST
  ARBORIST
  GARDENER
  MAINTENANCE_WORKER
  CLEANER
  LANDSCAPE_ARCHITECT
  PARK_RANGER
}

model Staff {
  id            String        @id @default(uuid()) @db.Uuid
  firstName     String
  lastName      String
  email         String        @unique
  password      String
  contactNumber String
  role          StaffRoleEnum
  isActive      Boolean
}

enum CONSERVATION_STATUS {
  LEAST_CONCERN
  NEAR_THREATENED
  VULNERABLE
  ENDANGERED
  CRITICALLY_ENDANGERED
  EXTINCT_IN__THE_WILD
  EXTINCT
}

enum LIGHT_TYPE {
  FULL_SUN
  PARTIAL_SHADE
  FULL_SHADE
}

enum SOIL_TYPE {
  SANDY
  CLAY
  LOAM
  PEATY
  SILTY
  CHALKY
  SHALLOW
}

model Species {
  id                    String              @id @default(uuid()) @db.Uuid
  phylum                String
  class                 String
  order                 String
  family                String
  genus                 String
  speciesName           String
  commonName            String
  speciesDescription    String
  conservationStatus    CONSERVATION_STATUS
  originCountry         String
  lightType             LIGHT_TYPE
  soilType              SOIL_TYPE
  fertiliserType        String
  images                String[]
  waterRequirement      Int
  fertiliserRequirement Int
  idealHumidity         Float
  minTemp               Float
  maxTemp               Float
  idealTemp             Float
  isDroughtTolerant     Boolean
  isFastGrowing         Boolean
  isSlowGrowing         Boolean
  isEdible              Boolean
  isDeciduous           Boolean
  isEvergreen           Boolean
  isToxic               Boolean
  isFragrant            Boolean
}

model Visitor {
  id                 String   @id @default(uuid()) @db.Uuid
  firstName          String
  lastName           String
  email              String   @unique
  password           String
  contactNumber      String
  favoriteSpeciesIds String[] // Array of species IDs
}
